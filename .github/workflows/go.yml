name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-go@v2
    - name: Build
      run: go build -v .
    - name: Test
      run: go test -v .

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

    - name: Lint
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: lint

    - name: Shadow check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: shadow
      env:
        GOROOT: ""

    - name: Static check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: staticcheck
      env:
        GOROOT: ""

    - name: Err check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: errcheck
      env:
        GOROOT: ""

    - name: Imports check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: imports

    - name: Sec
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: sec
      env:
        GOROOT: ""

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Run golangci-lint
      uses: actions-contrib/golangci-lint@v1
      with:
        args: "run"
      env:
        GOROOT: ""
